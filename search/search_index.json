{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"body{ background-image: url(img/background.jpeg); background-repeat: no-repeat; background-size: cover; background-attachment: fixed; } Magis5 New Challenge Essa documenta\u00e7\u00e3o t\u00e9cnica \u00e9 o nosso centro de conhecimento do projeto desenvolvido para o desafio. Documenta\u00e7\u00e3o","title":"Inicio"},{"location":"#magis5-new-challenge","text":"Essa documenta\u00e7\u00e3o t\u00e9cnica \u00e9 o nosso centro de conhecimento do projeto desenvolvido para o desafio. Documenta\u00e7\u00e3o","title":"Magis5 New Challenge"},{"location":"desafio/","text":"Desafio Enunciado oficial do desafio proposto. Descri\u00e7\u00e3o do Cen\u00e1rio Miguel possui uma loja f\u00edsica de cal\u00e7ados e utiliza um ERP para gerenciar suas opera\u00e7\u00f5es. Com o objetivo de aumentar o faturamento, Miguel decidiu investir em vendas online, anunciando seus produtos num marketplace. A quantidade de vendas online superou as expectativas do Miguel, que ficou bastante satisfeito com o aumento do faturamento, por\u00e9m insatisfeito com o aumento de custo em sua opera\u00e7\u00e3o, pois al\u00e9m de gerenciar as vendas no ERP, ele tamb\u00e9m precisa gerenciar em sua conta no marketplace. Com o objetivo de proporcionar ao Miguel a expans\u00e3o do seu neg\u00f3cio de forma que ele possa vender em v\u00e1rios outros marketplaces com baixo custo operacional, \u00e9 necess\u00e1rio construir uma solu\u00e7\u00e3o sist\u00eamica para centralizar a gest\u00e3o de suas vendas. Desenvolvimento Uma solu\u00e7\u00e3o que represente o ERP de acordo com o cen\u00e1rio mencionado Requisitos obrigat\u00f3rios Base de produtos (descri\u00e7\u00e3o e estoque); Simular os registros das baixas de estoque requisitados pela solu\u00e7\u00e3o do item 3. Uma solu\u00e7\u00e3o que represente o Marketplace de acordo com o cen\u00e1rio mencionado Requisitos obrigat\u00f3rios Simular os registros dos an\u00fancios requisitados pela solu\u00e7\u00e3o do item 3; Simular as entradas e registros de compras dos produtos anunciados; Simular os registros de baixa de estoque requisitados pela solu\u00e7\u00e3o do item 3. Uma solu\u00e7\u00e3o que represente a centraliza\u00e7\u00e3o da gest\u00e3o de vendas (automatiza\u00e7\u00e3o das opera\u00e7\u00f5es ERP e Marketplace de acordo com o cen\u00e1rio mencionado) Requisitos obrigat\u00f3rios Simular a consulta \u00e0 base de produtos da solu\u00e7\u00e3o do item 1; Simular requisi\u00e7\u00f5es de cadastro de an\u00fancios dos produtos para a solu\u00e7\u00e3o do item 2; Simular a consulta \u00e0s compras registradas na solu\u00e7\u00e3o do item 2; Para cada compra constatada, simular a requisi\u00e7\u00e3o de atualiza\u00e7\u00e3o (baixa) do estoque do produto anunciado na solu\u00e7\u00e3o do item 2 e estoque do produto registrado na base do produtos da solu\u00e7\u00e3o do item 1. Documenta\u00e7\u00e3o Descrever os requisitos funcionais para cada uma das solu\u00e7\u00f5es N\u00e3o considerar os requisitos obrigat\u00f3rios como restritivos; Contemplar ao menos o Diagrama de Atividades com base nos padr\u00f5es UML para cada uma das solu\u00e7\u00f5es. Qualidade Elaborar um roteiro de testes que garanta a valida\u00e7\u00e3o da qualidade da solu\u00e7\u00e3o como um todo. Entreg\u00e1veis Documenta\u00e7\u00e3o C\u00f3digo-fonte das solu\u00e7\u00f5es zipado ou GitHub Roteiro de Testes","title":"Desafio"},{"location":"desafio/#desafio","text":"Enunciado oficial do desafio proposto.","title":"Desafio"},{"location":"desafio/#descricao-do-cenario","text":"Miguel possui uma loja f\u00edsica de cal\u00e7ados e utiliza um ERP para gerenciar suas opera\u00e7\u00f5es. Com o objetivo de aumentar o faturamento, Miguel decidiu investir em vendas online, anunciando seus produtos num marketplace. A quantidade de vendas online superou as expectativas do Miguel, que ficou bastante satisfeito com o aumento do faturamento, por\u00e9m insatisfeito com o aumento de custo em sua opera\u00e7\u00e3o, pois al\u00e9m de gerenciar as vendas no ERP, ele tamb\u00e9m precisa gerenciar em sua conta no marketplace. Com o objetivo de proporcionar ao Miguel a expans\u00e3o do seu neg\u00f3cio de forma que ele possa vender em v\u00e1rios outros marketplaces com baixo custo operacional, \u00e9 necess\u00e1rio construir uma solu\u00e7\u00e3o sist\u00eamica para centralizar a gest\u00e3o de suas vendas.","title":"Descri\u00e7\u00e3o do Cen\u00e1rio"},{"location":"desafio/#desenvolvimento","text":"Uma solu\u00e7\u00e3o que represente o ERP de acordo com o cen\u00e1rio mencionado Requisitos obrigat\u00f3rios Base de produtos (descri\u00e7\u00e3o e estoque); Simular os registros das baixas de estoque requisitados pela solu\u00e7\u00e3o do item 3. Uma solu\u00e7\u00e3o que represente o Marketplace de acordo com o cen\u00e1rio mencionado Requisitos obrigat\u00f3rios Simular os registros dos an\u00fancios requisitados pela solu\u00e7\u00e3o do item 3; Simular as entradas e registros de compras dos produtos anunciados; Simular os registros de baixa de estoque requisitados pela solu\u00e7\u00e3o do item 3. Uma solu\u00e7\u00e3o que represente a centraliza\u00e7\u00e3o da gest\u00e3o de vendas (automatiza\u00e7\u00e3o das opera\u00e7\u00f5es ERP e Marketplace de acordo com o cen\u00e1rio mencionado) Requisitos obrigat\u00f3rios Simular a consulta \u00e0 base de produtos da solu\u00e7\u00e3o do item 1; Simular requisi\u00e7\u00f5es de cadastro de an\u00fancios dos produtos para a solu\u00e7\u00e3o do item 2; Simular a consulta \u00e0s compras registradas na solu\u00e7\u00e3o do item 2; Para cada compra constatada, simular a requisi\u00e7\u00e3o de atualiza\u00e7\u00e3o (baixa) do estoque do produto anunciado na solu\u00e7\u00e3o do item 2 e estoque do produto registrado na base do produtos da solu\u00e7\u00e3o do item 1.","title":"Desenvolvimento"},{"location":"desafio/#documentacao","text":"Descrever os requisitos funcionais para cada uma das solu\u00e7\u00f5es N\u00e3o considerar os requisitos obrigat\u00f3rios como restritivos; Contemplar ao menos o Diagrama de Atividades com base nos padr\u00f5es UML para cada uma das solu\u00e7\u00f5es.","title":"Documenta\u00e7\u00e3o"},{"location":"desafio/#qualidade","text":"Elaborar um roteiro de testes que garanta a valida\u00e7\u00e3o da qualidade da solu\u00e7\u00e3o como um todo.","title":"Qualidade"},{"location":"desafio/#entregaveis","text":"Documenta\u00e7\u00e3o C\u00f3digo-fonte das solu\u00e7\u00f5es zipado ou GitHub Roteiro de Testes","title":"Entreg\u00e1veis"},{"location":"doc_tecnica/","text":"Documenta\u00e7\u00e3o T\u00e9cnica Requisitos Funcionais Solu\u00e7\u00e3o 1 - ERP O usu\u00e1rio deve poder cadastrar novos produtos com nome, descri\u00e7\u00e3o e estoque. O estoque deve ser atualizado tanto via ERP quanto via requisi\u00e7\u00e3o de sistema Centralizador de Vendas. Solu\u00e7\u00e3o 2 - Marketplace O sistema deve poder cadastrar an\u00fancios requisitados pelo Centralizador de Vendas. O usu\u00e1rio deve poder comprar produtos anunciados. O sistema deve enviar a informa\u00e7\u00e3o de que uma compra foi feita para o Centralizador de Vendas. O sistema deve poder atualizar os valores de estoque com a requisi\u00e7\u00e3o do Centralizador de Vendas. Solu\u00e7\u00e3o 3 - Centralizador de Vendas O usu\u00e1rio deve poder consultar a base de produtos cadastrados. O usu\u00e1rio deve poder editar produtos cadastrados. O usu\u00e1rio poder excluir produtos cadastrados. O usu\u00e1rio deve poder requisitar a cria\u00e7\u00e3o de novos an\u00fancios nos Marketplaces conectados ao sistema. O sistema deve atualizar o estoque com a chegada da requisi\u00e7\u00e3o do Marketplace. Diagramas de Atividade Modelo do Banco de Dados {: class=\"aligncenter\") Requisitos T\u00e9cnicos Front End Foi criado um prot\u00f3tipo de como o Centralizador de Vendas se pareceria na sua vers\u00e3o final utilizando o Figma . Nossa ideia era de desenvolver um Front End funcional utilizando HTML, CSS e JavaScript por\u00e9m devido o tempo e as complica\u00e7\u00f5es e isso n\u00e3o foi poss\u00edvel. Tamb\u00e9m foi feito uma tela simb\u00f3lica para a solu\u00e7\u00e3o 2, do Marketplace. Back End O que foi feito Foi criada um cluster remoto no MongoDB Atlas para que pudesse servir como nossa base de dados. Para nossa aplica\u00e7\u00e3o, Node.js juntamente com Nestjs foram utilizados para compor o back end. Criamos um m\u00e9todo de criar e atualizar usu\u00e1rios no cluster, e tamb\u00e9m desenvolvemos um m\u00e9todo de autentica\u00e7\u00e3o para os mesmos. O Login \u00e9 feito e um token de autoriza\u00e7\u00e3o \u00e9 retornado para que o acesso ao BD remoto seja garantido. Criamos tamb\u00e9m um m\u00e9todo para criar e inserir produtos no BD. No qual o app utiliza-se do token de autentica\u00e7\u00e3o gerado para inserir um produto no BD, no qual, conta com o username como chave estrangeira para identifica\u00e7\u00e3o de qual usu\u00e1rio \u00e9 dono do respectivo produto. O que quer\u00edamos ter feito Considerando o pouco tempo dispon\u00edvel para o desenvolvimento, acabamos sem finalizar as seguintes funcoes: updateProduto anunciaProduto A ideia de updateProduto \u00e9 chamar um endpoint que seria respons\u00e1vel por atualizar o produto com novos dados inseridos pelo usu\u00e1rio. J\u00e1 a de anunciaProduto seria apenas um set da vari\u00e1vel anuncia como true e um update na sua vari\u00e1vel de array com o respectivo marketplace anunciado, para que apenas os produtos anunciados fossem exibidos na p\u00e1gina de marketplace.","title":"Documenta\u00e7\u00e3o T\u00e9cnica"},{"location":"doc_tecnica/#documentacao-tecnica","text":"","title":"Documenta\u00e7\u00e3o T\u00e9cnica"},{"location":"doc_tecnica/#requisitos-funcionais","text":"","title":"Requisitos Funcionais"},{"location":"doc_tecnica/#solucao-1-erp","text":"O usu\u00e1rio deve poder cadastrar novos produtos com nome, descri\u00e7\u00e3o e estoque. O estoque deve ser atualizado tanto via ERP quanto via requisi\u00e7\u00e3o de sistema Centralizador de Vendas.","title":"Solu\u00e7\u00e3o 1 - ERP"},{"location":"doc_tecnica/#solucao-2-marketplace","text":"O sistema deve poder cadastrar an\u00fancios requisitados pelo Centralizador de Vendas. O usu\u00e1rio deve poder comprar produtos anunciados. O sistema deve enviar a informa\u00e7\u00e3o de que uma compra foi feita para o Centralizador de Vendas. O sistema deve poder atualizar os valores de estoque com a requisi\u00e7\u00e3o do Centralizador de Vendas.","title":"Solu\u00e7\u00e3o 2 - Marketplace"},{"location":"doc_tecnica/#solucao-3-centralizador-de-vendas","text":"O usu\u00e1rio deve poder consultar a base de produtos cadastrados. O usu\u00e1rio deve poder editar produtos cadastrados. O usu\u00e1rio poder excluir produtos cadastrados. O usu\u00e1rio deve poder requisitar a cria\u00e7\u00e3o de novos an\u00fancios nos Marketplaces conectados ao sistema. O sistema deve atualizar o estoque com a chegada da requisi\u00e7\u00e3o do Marketplace.","title":"Solu\u00e7\u00e3o 3 - Centralizador de Vendas"},{"location":"doc_tecnica/#diagramas-de-atividade","text":"","title":"Diagramas de Atividade"},{"location":"doc_tecnica/#modelo-do-banco-de-dados","text":"{: class=\"aligncenter\")","title":"Modelo do Banco de Dados"},{"location":"doc_tecnica/#requisitos-tecnicos","text":"","title":"Requisitos T\u00e9cnicos"},{"location":"doc_tecnica/#front-end","text":"Foi criado um prot\u00f3tipo de como o Centralizador de Vendas se pareceria na sua vers\u00e3o final utilizando o Figma . Nossa ideia era de desenvolver um Front End funcional utilizando HTML, CSS e JavaScript por\u00e9m devido o tempo e as complica\u00e7\u00f5es e isso n\u00e3o foi poss\u00edvel. Tamb\u00e9m foi feito uma tela simb\u00f3lica para a solu\u00e7\u00e3o 2, do Marketplace.","title":"Front End"},{"location":"doc_tecnica/#back-end","text":"","title":"Back End"},{"location":"doc_tecnica/#o-que-foi-feito","text":"Foi criada um cluster remoto no MongoDB Atlas para que pudesse servir como nossa base de dados. Para nossa aplica\u00e7\u00e3o, Node.js juntamente com Nestjs foram utilizados para compor o back end. Criamos um m\u00e9todo de criar e atualizar usu\u00e1rios no cluster, e tamb\u00e9m desenvolvemos um m\u00e9todo de autentica\u00e7\u00e3o para os mesmos. O Login \u00e9 feito e um token de autoriza\u00e7\u00e3o \u00e9 retornado para que o acesso ao BD remoto seja garantido. Criamos tamb\u00e9m um m\u00e9todo para criar e inserir produtos no BD. No qual o app utiliza-se do token de autentica\u00e7\u00e3o gerado para inserir um produto no BD, no qual, conta com o username como chave estrangeira para identifica\u00e7\u00e3o de qual usu\u00e1rio \u00e9 dono do respectivo produto.","title":"O que foi feito"},{"location":"doc_tecnica/#o-que-queriamos-ter-feito","text":"Considerando o pouco tempo dispon\u00edvel para o desenvolvimento, acabamos sem finalizar as seguintes funcoes: updateProduto anunciaProduto A ideia de updateProduto \u00e9 chamar um endpoint que seria respons\u00e1vel por atualizar o produto com novos dados inseridos pelo usu\u00e1rio. J\u00e1 a de anunciaProduto seria apenas um set da vari\u00e1vel anuncia como true e um update na sua vari\u00e1vel de array com o respectivo marketplace anunciado, para que apenas os produtos anunciados fossem exibidos na p\u00e1gina de marketplace.","title":"O que quer\u00edamos ter feito"},{"location":"organizacao/","text":"Organiza\u00e7\u00e3o Para o desenvolvimento do projeto, a equipe organizou-se de forma remota utilizando as seguintes plataformas: Discord: principal canal de comunica\u00e7\u00e3o entre os integrantes. Trello: utilizado para o gerenciamento do projeto, fluxo de trabalho, divis\u00e3o e monitoramento do desenvolvimento do front-end e do back-end. Jira: utilizado para o gerenciamento, divis\u00e3o e fluxo de trabalho do desenvolvimento do back-end. Figma: ferramenta colaborativa utilizada para o design da interface gr\u00e1fica.","title":"Organiza\u00e7\u00e3o"},{"location":"organizacao/#organizacao","text":"Para o desenvolvimento do projeto, a equipe organizou-se de forma remota utilizando as seguintes plataformas: Discord: principal canal de comunica\u00e7\u00e3o entre os integrantes. Trello: utilizado para o gerenciamento do projeto, fluxo de trabalho, divis\u00e3o e monitoramento do desenvolvimento do front-end e do back-end. Jira: utilizado para o gerenciamento, divis\u00e3o e fluxo de trabalho do desenvolvimento do back-end. Figma: ferramenta colaborativa utilizada para o design da interface gr\u00e1fica.","title":"Organiza\u00e7\u00e3o"}]}